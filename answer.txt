------------------------- DOCKERFILE -------------------------
FROM python:2.7

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

COPY requirements.txt /usr/src/app/
RUN pip install -r requirements.txt

ENV FLASK_APP=app.py

COPY ./app.py /usr/src/app
CMD ["python", "app.py"]


------------------------- DOCKER COMMANDS TO USE -------------------------
docker build -t hello-app .
docker run -it -p 5000:5000 hello-app:latest
docker images
docker ps
docker login
docker tag <image> username/repository:tag
docker push username/repository:tag



------------------------- MANIFESTS/hello-NS.YML -------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: hello-app

------------------------- MANIFESTS/hello-DEPLOY.YAML -------------------------
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: hello-app
  name: hello-app
  namespace: hello-app
spec:
  replicas: 1
  selector:
    matchLabels:
      run: hello-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: hello-app
    spec:
      containers:
      - image: <EDIT THIS PART FOR REGULAR>
        imagePullPolicy: Always
        name: hello-app
        terminationMessagePath: /dev/termination-log
        resources:
          limits:
            cpu: 200m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 2Gi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30

------------------------- MANIFESTS/hello-SVC.YAML -------------------------
apiVersion: v1
kind: Service
metadata:
  labels:
    run: hello-app
  name: hello-app
  namespace: hello-app
spec:
  ports:
  - protocol: TCP
    port: 443
    targetPort: 5000
  selector:
    run: hello-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

------------------------- MANIFESTS/hello-ING.YAML -------------------------
apiVersion: extensions/v1beta1
kind: Ingress  
metadata:
  name: hello-app
  namespace: hello-app
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: hello-app
          servicePort: 443
        path: /
status:
  loadBalancer: {}

------------------------- KUBERNETES COMMANDS TO USE -------------------------
Kubectl config set-context minikube â€“namespace=hello-app



